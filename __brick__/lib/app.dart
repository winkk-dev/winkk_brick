// Generated by mason - winkk_brick
import 'package:flutter/material.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';
import 'package:flutter_hooks/flutter_hooks.dart';
import 'package:hooks_riverpod/hooks_riverpod.dart';
import 'package:reactive_forms/reactive_forms.dart';
import 'package:responsive_framework/responsive_framework.dart';
import 'utils/extensions/context_extensions.dart';
import 'router/router.dart';
import 'styles/custom_theme_data.dart';
import 'utils/snacks.dart';
import 'values/config_values.dart';

class App extends HookConsumerWidget {
  const App({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final primaryScrollController = useScrollController(); // Mainly for iOS so that scroll to top works, set a global scroll controller
    final router = ref.watch(routerProvider);

    return PrimaryScrollController(
      controller: primaryScrollController, 
      child: MaterialApp.router(
          title: ConfigValues.appName,
          theme: CustomThemeData.light,
          themeMode: ThemeMode.system, // Uses dark or light depending on system, or only light when dark is not defined 
          {{^darkMode}}// {{/darkMode}}darkTheme: CustomThemeData.dark,
          localizationsDelegates: const [
            AppLocalizations.delegate,
            GlobalMaterialLocalizations.delegate,
            GlobalWidgetsLocalizations.delegate,
            GlobalCupertinoLocalizations.delegate,
          ],
          supportedLocales: AppLocalizations.supportedLocales,
          routerConfig: router,
          scaffoldMessengerKey: Snacks.mainScaffoldMessengerKey,
          builder: (context, child) {
            /// 1. Responsive Breakpoints, 2. Reactive Form Defaults, 3. Clamped Text Scaling
            return ResponsiveBreakpoints.builder(
              breakpoints: ConfigValues.breakpoints,
              child: ReactiveFormConfig(validationMessages: {
                  // Define global validation messages for forms here
                  ValidationMessage.required: (error) => context.localizations.general_required,
                },
                child: MediaQuery.withClampedTextScaling(child: child!,
                  minScaleFactor: ConfigValues.minFontScaleFactor,
                  maxScaleFactor: ConfigValues.maxFontScaleFactor
                ) // Clamp text scaling to reasonable range
              ),
            );
          }
        ),
    );
  }
}
