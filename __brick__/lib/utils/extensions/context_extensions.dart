// Generated by mason - winkk_brick
import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';
import 'package:responsive_framework/responsive_framework.dart';
import '../../styles/custom_colors.dart';
import '../../styles/custom_text_styles.dart';

/// Extensions to avoid redundant .of(context) calls
extension BuildContextExtensions on BuildContext {
  ThemeData get theme => Theme.of(this);

  TextTheme get textTheme => theme.textTheme;

  ColorScheme get colorScheme => theme.colorScheme;

  CustomColors get customColors => theme.extension<CustomColors>()!;

  CustomTextStyles get customTextStyles => theme.extension<CustomTextStyles>()!;

  NavigatorState get navigator => Navigator.of(this);

  NavigatorState get rootNavigator => Navigator.of(this, rootNavigator: true);

  GoRouter get goRouter => GoRouter.of(this);

  AppLocalizations get localizations => AppLocalizations.of(this)!;

  MediaQueryData get mediaQuery => MediaQuery.of(this);

  TextScaler get mediaQueryTextScaler => MediaQuery.textScalerOf(this);

  Size get screenSize => MediaQuery.sizeOf(this);

  FocusScopeNode get focusScope => FocusScope.of(this);

  ResponsiveBreakpointsData get responsiveBreakpoints => ResponsiveBreakpoints.of(this);

  /// Workaround for iOS and ScrollToTop issues of nested navigators (shell routes etc.)
  /// This is the controller which gets the ScrollToTop signal.
  /// https://github.com/flutter/flutter/issues/85603
  ScrollController get globalScrollController => PrimaryScrollController.of(rootNavigator.context);

  String get lastMatchedLocation => goRouter.routerDelegate.currentConfiguration.last.matchedLocation;
}