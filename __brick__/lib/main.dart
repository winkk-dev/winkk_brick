// Generated by mason - winkk_brick
import 'dart:async';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:flutter_native_splash/flutter_native_splash.dart';
import 'package:hooks_riverpod/hooks_riverpod.dart';
import 'package:sentry_flutter/sentry_flutter.dart';
import 'utils/provider_log_observer.dart';
import 'values/config_values.dart';
import 'startup.dart';
import 'app.dart';

/// The main entry point for the app.
/// Initializes [Sentry], error handling and the splash screen. Starts with [App].
Future<void> main() async {
  // Run app out of SentryFlutter.init because of zoning issue https://github.com/getsentry/sentry-dart/issues/1943#issuecomment-2185880234
  await runZonedGuarded(() async {
    final widgetsBinding = WidgetsFlutterBinding.ensureInitialized();
    FlutterNativeSplash.preserve(widgetsBinding: widgetsBinding);  // Keep splash screen visible while Flutter initializes

    // Handling errors https://docs.flutter.dev/testing/errors
    FlutterError.onError = (details) {
      FlutterError.presentError(details);
      Sentry.captureException(details.exception, stackTrace: details.stack);
    };

    PlatformDispatcher.instance.onError = (error, stack) {
      Sentry.captureException(error, stackTrace: stack);
      return true;
    };

    await SentryFlutter.init(ConfigValues.sentryConfiguration);

    runApp(ProviderScope(
      observers: kDebugMode ? [ProviderLogObserver()] : null,
      child: DefaultAssetBundle(bundle: SentryAssetBundle(), child: const StartupWidget(child: App())),
    ));
  }, (error, stackTrace) async {
    Sentry.captureException(error, stackTrace: stackTrace);
  });
}