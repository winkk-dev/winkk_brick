// Generated by mason - winkk_brick
import 'package:flutter/material.dart';
import 'package:hooks_riverpod/hooks_riverpod.dart';
import 'package:skeletonizer/skeletonizer.dart';
import '../../utils/extensions/sliver_extensions.dart';
import '../../components/error_handler.dart';
import '../../services/dummy/dummy_provider.dart';
import '../../utils/extensions/context_extensions.dart';
import '../../components/custom_confetti.dart';
import '../../utils/scroll_utils.dart';
import '../../values/custom_sizes.dart';

class HomeStart extends HookConsumerWidget {
    const HomeStart({super.key});

    @override
    Widget build(BuildContext context, WidgetRef ref) {
      // When in a nested navigator, we need the routeScrollControllerProvider to attach to the primary scroll controller
      final scrollController = ref.watch(routeScrollControllerProvider(context.lastMatchedLocation));

      return CustomScrollView(
        controller: scrollController,
        slivers: [
          SliverAppBar(title: Text('Another winkk App!'),
            floating: true,
            pinned: true,
            flexibleSpace: FlexibleSpaceBar(
              background: Container(
                padding: const EdgeInsets.all(CustomSizes.medium),
                color: context.colorScheme.secondaryContainer,
                child: Align(
                  alignment: Alignment.bottomRight,
                  child: Image.asset('assets/img/launch/winkk.png', height: 100),
                ),
              ),
          ),
            expandedHeight: 120,
          ),
          _DummySkeleton(),
          SliverFillRemaining(
            child: Center(
              child: FilledButton(
                child: Text('{{appName}}'),
                onPressed: () {
                  CustomConfetti.insertOverlay(context);
                },
              ),
            ),
          ),
        ],
      );
    }
}

class _DummySkeleton extends ConsumerWidget {
  const _DummySkeleton({
    super.key,
    // Args
  });

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final dummy = ref.watch(dummyProvider);

    return dummy.when(
      skipLoadingOnRefresh: false,
      skipError: true,
      data: (data) => _DummySkeletonInner(data: data),
      loading: () => const SliverSkeletonizer(
          child: _DummySkeletonInner(data: ['Placeholder', 'Placeholder', 'Placeholder']),
      ),
      error: (e, s) => ErrorHandler(
          error: e,
          stackTrace: s,
          padding: const EdgeInsets.all(CustomSizes.medium),
          onRetry: () => ref.refresh(dummyProvider.future)
      ).toSliver(),
    );
  }
}

class _DummySkeletonInner extends StatelessWidget {
  const _DummySkeletonInner({
    super.key,
    required this.data
  });

  final List<String> data;

  @override
  Widget build(BuildContext context) {
    return SliverList(
      delegate: SliverChildBuilderDelegate((context, index) {
        return ListTile(
          key: ValueKey('dummy_${data[index]}'),
          title: Text(data[index]),
        );
      },
      childCount: data.length,
      ),
    );
  }
}