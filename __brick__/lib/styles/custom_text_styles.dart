// Generated by mason - winkk_brick
import 'package:flutter/material.dart';
import 'package:universal_platform/universal_platform.dart';

class CustomTextStyles extends ThemeExtension<CustomTextStyles> {
  /// Global typography used in the app. Includes text themes for dark, light and defines sizing and fonts. 
  /// [black] and [white] may be modified to define global default [TextTheme]s.
  static final globalTypography = Typography(platform: UniversalPlatform.isIOS ? TargetPlatform.iOS :
      UniversalPlatform.isMacOS ? TargetPlatform.macOS :
      UniversalPlatform.isWindows ? TargetPlatform.windows :
      UniversalPlatform.isLinux ? TargetPlatform.linux :
      UniversalPlatform.isAndroid ? TargetPlatform.android : TargetPlatform.macOS, // Mac as fallback
    // Define text themes here if needed
    black: null,
    white: null,
  );  

  /// Additional text styles not present in the [TextTheme].
  const CustomTextStyles({
    required this.temp,
  });

  final TextStyle temp; // Add your custom text styles here

  static const CustomTextStyles lightTextStyles = CustomTextStyles(
    temp: TextStyle(
        fontSize: 24,
    )
  );

  // Dark text styles do not usually differ from light text styles, as colors are handled by the theme itself. 
  static const CustomTextStyles darkTextStyles = lightTextStyles;

  static CustomTextStyles of(BuildContext context) => Theme.of(context).extension<CustomTextStyles>()!;

  @override
  ThemeExtension<CustomTextStyles> copyWith({
    TextStyle? temp,
  }) {
    return CustomTextStyles(
      temp: temp ?? this.temp,
    );
  }

  @override
  ThemeExtension<CustomTextStyles> lerp(covariant ThemeExtension<CustomTextStyles>? other, double t) {
    if (other is! CustomTextStyles) return this;
    return CustomTextStyles(
      temp: TextStyle.lerp(temp, other.temp, t)!,
    );
  }
}