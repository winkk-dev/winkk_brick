// Generated by mason - winkk_brick
import 'package:device_info_plus/device_info_plus.dart';
import 'package:riverpod_annotation/riverpod_annotation.dart';
import '../../values/config_values.dart';
import 'device_info_provider.dart';
import 'package_info_provider.dart';

part 'user_agent_provider.g.dart';

@Riverpod(keepAlive: true)
Future<String> userAgent(UserAgentRef ref) async {
  final packageInfoFuture = ref.watch(packageInfoProvider.future);
  final deviceInfoFuture = ref.watch(deviceInfoProvider.future);
  final packageInfo = await packageInfoFuture;
  final deviceInfo = await deviceInfoFuture;

  final appProduct = '${ConfigValues.appName}/${packageInfo.version}+${packageInfo.buildNumber}';

  final deviceProduct = switch (deviceInfo) {
    (IosDeviceInfo iosDeviceInfo) => '${iosDeviceInfo.systemName} ${iosDeviceInfo.systemVersion}; ${iosDeviceInfo.model}',
    (AndroidDeviceInfo androidDeviceInfo) => 'Android ${androidDeviceInfo.version.release}; ${androidDeviceInfo.model}',
    (WindowsDeviceInfo windowsDeviceInfo) => 'Windows ${windowsDeviceInfo.displayVersion}; ${windowsDeviceInfo.productName}',
    (LinuxDeviceInfo linuxDeviceInfo) => 'Linux ${linuxDeviceInfo.version}; ${linuxDeviceInfo.name}',
    (MacOsDeviceInfo macOsDeviceInfo) => 'macOS ${macOsDeviceInfo.model}; ${macOsDeviceInfo.arch}',
    (WebBrowserInfo webBrowserInfo) => 'Browser ${webBrowserInfo.appVersion} ${webBrowserInfo.appName}',
    _ => 'Unknown Device',
  };

  final userAgent = '$appProduct ($deviceProduct)';
  return userAgent;
}